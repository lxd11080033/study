<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
		http://www.springframework.org/schema/beans/spring-beans-3.2.xsd 
		http://www.springframework.org/schema/mvc 
		http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd 
		http://www.springframework.org/schema/context 
		http://www.springframework.org/schema/context/spring-context-3.2.xsd 
		http://www.springframework.org/schema/aop 
		http://www.springframework.org/schema/aop/spring-aop-3.2.xsd 
		http://www.springframework.org/schema/tx 
		http://www.springframework.org/schema/tx/spring-tx-3.2.xsd">
		
		<!-- 启用注解扫描 -->
		<context:component-scan base-package="com.bawei"></context:component-scan>
		
		<!-- 引入 ssm.properties文件的路径和名称 -->
	<context:property-placeholder location="classpath:ssm.properties"/>
		<!-- 配置数据连接池 bean -->
		<bean id="dataSource"  class="com.mchange.v2.c3p0.ComboPooledDataSource">
			<property name="jdbcUrl">
				<value>${jdbc.url}</value>
			</property>
			
			<property name="driverClass">
				<value>${jdbc.driver}</value>
			</property>
			
			<property name="user">
				<value>${jdbc.user}</value>
			</property>
				
			<property name="password">
				<value>${jdbc.password}</value>
			</property>
			<!-- 连接池的最大数量 -->
			<!-- 连接池的最小数量 -->
			<!-- 连接池的初始数量 -->
			<!-- 连接池的最大等待时间 -->
			<!-- 连接池的 间隔时间 -->
		</bean>
		
		<!-- 配置 SqlSessionFactory对象  -->
		<bean id="sessionFactory"  class="org.mybatis.spring.SqlSessionFactoryBean">
			<!-- 注入 数据源对象 -->
			<property name="dataSource"  ref="dataSource"></property>
			<!-- 配置 mybatis 的 核心配置文件的路径和名称 -->
			<property name="configLocation">
				<value>classpath:SqlMapConfig.xml</value>
			</property>
		</bean>
		
		<!-- 配置   dao对象
		   Spring提供了 MapperScannerConfigurer  扫描 dao接口 所在包 
		        就可以将 接口实现类对象 创建起来
		  -->
		<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
			<!-- 注入  dao接口所在的包名 -->
			<property name="basePackage">
				<value>com.bawei.dao</value>
			</property>
			<!-- 这里要使用sqlSessionFactoryBeanName  而不是  sqlSessionFactory属性
			  因为 如果用的是sqlSessionFactory  会导致 上面的 ssm.properties引入失败
			 -->
			<property name="sqlSessionFactoryBeanName">
				<value>sessionFactory</value>
			</property>
		</bean>
		
		<!-- 配置 事务管理切面对象 -->
		<bean id="txManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
			<property name="dataSource"  ref="dataSource"></property>
		</bean>
		
		<!-- 启用事务的注解 -->
		 <tx:annotation-driven transaction-manager="txManager"/>
		
</beans>